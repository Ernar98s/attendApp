{"remainingRequest":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\src\\views\\Dashboard.vue?vue&type=template&id=22ba47ca&","dependencies":[{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\src\\views\\Dashboard.vue","mtime":1619473550000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPFdpZGdldHNEcm9wZG93biAvPgogIDwhLS0gPENDYXJkPgogICAgPENDYXJkQm9keT4KICAgICAgPENSb3c+CiAgICAgICAgPENDb2wgc209IjUiPgogICAgICAgICAgPGg0IGlkPSJ0cmFmZmljIiBjbGFzcz0iY2FyZC10aXRsZSBtYi0wIj5UcmFmZmljPC9oND4KICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsIHRleHQtbXV0ZWQiPk5vdmVtYmVyIDIwMTc8L2Rpdj4KICAgICAgICA8L0NDb2w+CiAgICAgICAgPENDb2wgc209IjciIGNsYXNzPSJkLW5vbmUgZC1tZC1ibG9jayI+CiAgICAgICAgICA8Q0J1dHRvbiBjb2xvcj0icHJpbWFyeSIgY2xhc3M9ImZsb2F0LXJpZ2h0Ij4KICAgICAgICAgICAgPENJY29uIG5hbWU9ImNpbC1jbG91ZC1kb3dubG9hZCIvPgogICAgICAgICAgPC9DQnV0dG9uPgogICAgICAgICAgPENCdXR0b25Hcm91cCBjbGFzcz0iZmxvYXQtcmlnaHQgbXItMyI+CiAgICAgICAgICAgIDxDQnV0dG9uCiAgICAgICAgICAgICAgY29sb3I9Im91dGxpbmUtc2Vjb25kYXJ5IgogICAgICAgICAgICAgIHYtZm9yPSIodmFsdWUsIGtleSkgaW4gWydEYXknLCAnTW9udGgnLCAnWWVhciddIgogICAgICAgICAgICAgIDprZXk9ImtleSIKICAgICAgICAgICAgICBjbGFzcz0ibXgtMCIKICAgICAgICAgICAgICA6cHJlc3NlZD0idmFsdWUgPT09IHNlbGVjdGVkID8gdHJ1ZSA6IGZhbHNlIgogICAgICAgICAgICAgIEBjbGljaz0ic2VsZWN0ZWQgPSB2YWx1ZSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIHt7dmFsdWV9fQogICAgICAgICAgICA8L0NCdXR0b24+CiAgICAgICAgICA8L0NCdXR0b25Hcm91cD4KICAgICAgICA8L0NDb2w+CiAgICAgIDwvQ1Jvdz4KICAgICAgPE1haW5DaGFydEV4YW1wbGUgc3R5bGU9ImhlaWdodDozMDBweDttYXJnaW4tdG9wOjQwcHg7Ii8+CiAgICA8L0NDYXJkQm9keT4KICAgIDxDQ2FyZEZvb3Rlcj4KICAgICAgPENSb3cgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICA8Q0NvbCBtZCBzbT0iMTIiIGNsYXNzPSJtYi1zbS0yIG1iLTAiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1tdXRlZCI+VmlzaXRzPC9kaXY+CiAgICAgICAgICA8c3Ryb25nPjI5LjcwMyBVc2VycyAoNDAlKTwvc3Ryb25nPgogICAgICAgICAgPENQcm9ncmVzcwogICAgICAgICAgICBjbGFzcz0icHJvZ3Jlc3MteHMgbXQtMiIKICAgICAgICAgICAgOnByZWNpc2lvbj0iMSIKICAgICAgICAgICAgY29sb3I9InN1Y2Nlc3MiCiAgICAgICAgICAgIDp2YWx1ZT0iNDAiCiAgICAgICAgICAvPgogICAgICAgIDwvQ0NvbD4KICAgICAgICA8Q0NvbCBtZCBzbT0iMTIiIGNsYXNzPSJtYi1zbS0yIG1iLTAgZC1tZC1kb3duLW5vbmUiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1tdXRlZCI+VW5pcXVlPC9kaXY+CiAgICAgICAgICA8c3Ryb25nPjI0LjA5MyBVc2VycyAoMjAlKTwvc3Ryb25nPgogICAgICAgICAgPENQcm9ncmVzcwogICAgICAgICAgICBjbGFzcz0icHJvZ3Jlc3MteHMgbXQtMiIKICAgICAgICAgICAgOnByZWNpc2lvbj0iMSIKICAgICAgICAgICAgY29sb3I9ImluZm8iCiAgICAgICAgICAgIDp2YWx1ZT0iMjAiCiAgICAgICAgICAvPgogICAgICAgIDwvQ0NvbD4KICAgICAgICA8Q0NvbCBtZCBzbT0iMTIiIGNsYXNzPSJtYi1zbS0yIG1iLTAiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1tdXRlZCI+UGFnZXZpZXdzPC9kaXY+CiAgICAgICAgICA8c3Ryb25nPjc4LjcwNiBWaWV3cyAoNjAlKTwvc3Ryb25nPgogICAgICAgICAgPENQcm9ncmVzcwogICAgICAgICAgICBjbGFzcz0icHJvZ3Jlc3MteHMgbXQtMiIKICAgICAgICAgICAgOnByZWNpc2lvbj0iMSIKICAgICAgICAgICAgY29sb3I9Indhcm5pbmciCiAgICAgICAgICAgIDp2YWx1ZT0iNjAiCiAgICAgICAgICAvPgogICAgICAgIDwvQ0NvbD4KICAgICAgICA8Q0NvbCBtZCBzbT0iMTIiIGNsYXNzPSJtYi1zbS0yIG1iLTAiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1tdXRlZCI+TmV3IFVzZXJzPC9kaXY+CiAgICAgICAgICA8c3Ryb25nPjIyLjEyMyBVc2VycyAoODAlKTwvc3Ryb25nPgogICAgICAgICAgPENQcm9ncmVzcwogICAgICAgICAgICBjbGFzcz0icHJvZ3Jlc3MteHMgbXQtMiIKICAgICAgICAgICAgOnByZWNpc2lvbj0iMSIKICAgICAgICAgICAgY29sb3I9ImRhbmdlciIKICAgICAgICAgICAgOnZhbHVlPSI4MCIKICAgICAgICAgIC8+CiAgICAgICAgPC9DQ29sPgogICAgICAgIDxDQ29sIG1kIHNtPSIxMiIgY2xhc3M9Im1iLXNtLTIgbWItMCBkLW1kLWRvd24tbm9uZSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LW11dGVkIj5Cb3VuY2UgUmF0ZTwvZGl2PgogICAgICAgICAgPHN0cm9uZz5BdmVyYWdlIFJhdGUgKDQwLjE1JSk8L3N0cm9uZz4KICAgICAgICAgIDxDUHJvZ3Jlc3MKICAgICAgICAgICAgY2xhc3M9InByb2dyZXNzLXhzIG10LTIiCiAgICAgICAgICAgIDpwcmVjaXNpb249IjEiCiAgICAgICAgICAgIDp2YWx1ZT0iNDAiCiAgICAgICAgICAvPgogICAgICAgIDwvQ0NvbD4KICAgICAgPC9DUm93PgogICAgPC9DQ2FyZEZvb3Rlcj4KICA8L0NDYXJkPiAtLT4KICA8IS0tIDxXaWRnZXRzQnJhbmQvPiAtLT4KICA8Q1Jvdz4KICAgIDxDQ29sIG1kPSIxMiI+CiAgICAgIDxDQ2FyZD4KICAgICAgICA8Q0NhcmRIZWFkZXI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ2luLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiI+CiAgICAgICAgICAgIDxzcGFuPtCa0LvQsNC/0LDQvdGLPC9zcGFuPgogICAgICAgICAgPENCdXR0b24gIGNvbG9yPSJzdWNjZXNzIiBAY2xpY2s9Indhcm5pbmdNb2RhbCA9ICF3YXJuaW5nTW9kYWwiPgogICAgICAgICAgICDQlNC+0LHQsNCy0LjRgtGMCiAgICAgICAgICA8L0NCdXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvQ0NhcmRIZWFkZXIKCiAgICAgICAgPgogICAgICAgIDxDQ2FyZEJvZHk+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ2luLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiI+CiAgICAgICAgICAgIDxDU2VsZWN0CiAgICAgICAgICAgICAgdi1pZj0iaXNTZWxlY3QiCiAgICAgICAgICAgICAgaG9yaXpvbnRhbAogICAgICAgICAgICAgIGxhYmVsPSLQlNC10LnRgdGC0LLQuNC1INC90LAg0LLRi9Cx0L7RgCIKICAgICAgICAgICAgICA6b3B0aW9ucz0iW10iCiAgICAgICAgICAgICAgY2xhc3M9ImNvbC00IgogICAgICAgICAgICAvPgogICAgICAgICAgICA8Q1NlbGVjdAogICAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgICBsYWJlbD0i0JPQvtGA0L7QtCIKICAgICAgICAgICAgICA6b3B0aW9ucz0iWyfQkNC70LzQsNGC0YsnLCAn0JDRgdGC0LDQvdCwJ10iCiAgICAgICAgICAgICAgY2xhc3M9ImNvbC00IgogICAgICAgICAgICAvPgogICAgICAgICAgICA8Q0lucHV0IHBsYWNlaG9sZGVyPSIiPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjYXBwZW5kPgogICAgICAgICAgICAgICAgPENCdXR0b24gY29sb3I9InByaW1hcnkiPgogICAgICAgICAgICAgICAgICA8Q0ljb24gbmFtZT0iY2lsLW1hZ25pZnlpbmctZ2xhc3MiIC8+IFNlYXJjaAogICAgICAgICAgICAgICAgPC9DQnV0dG9uPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDwvQ0lucHV0PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8Q0RhdGFUYWJsZQogICAgICAgICAgICBjbGFzcz0ibWItMCB0YWJsZS1vdXRsaW5lIgogICAgICAgICAgICBob3ZlcgogICAgICAgICAgICA6aXRlbXM9InRhYmxlSXRlbXMiCiAgICAgICAgICAgIDpmaWVsZHM9InRhYmxlRmllbGRzIgogICAgICAgICAgICBoZWFkLWNvbG9yPSJsaWdodCIKICAgICAgICAgICAgbm8tc29ydGluZwogICAgICAgICAgICA6aXRlbXMtcGVyLXBhZ2U9IjUiCiAgICAgICAgICA+CiAgICAgICAgICAgIDx0ZCBzbG90PSJzZWxlY3QiIHNsb3Qtc2NvcGU9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICA8Q0lucHV0Q2hlY2tib3gKICAgICAgICAgICAgICAgIDp2YWx1ZT0iaXRlbS5zZWxlY3QudmFsdWUiCiAgICAgICAgICAgICAgICBjdXN0b20KICAgICAgICAgICAgICAgIGlubGluZQogICAgICAgICAgICAgICAgQGNoYW5nZT0iaXNTZWxlY3QgPSB0cnVlIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBzbG90PSJjaXR5IiBzbG90LXNjb3BlPSJ7IGl0ZW0gfSI+CiAgICAgICAgICAgICAge3sgaXRlbS5jaXR5Lm5hbWUgfX0KICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPHRkIHNsb3Q9ImRpc3RyaWN0IiBzbG90LXNjb3BlPSJ7IGl0ZW0gfSI+CiAgICAgICAgICAgICAge3sgaXRlbS5kaXN0cmljdC5uYW1lIH19CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBzbG90PSJzdHJlZXQiIHNsb3Qtc2NvcGU9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICB7eyBpdGVtLnN0cmVldC5uYW1lIH19CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBzbG90PSJidWlsZGluZyIgc2xvdC1zY29wZT0ieyBpdGVtIH0iPgogICAgICAgICAgICAgIHt7IGl0ZW0uYnVpbGRpbmcubmFtZSB9fQogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0ibnVtSG91c2UiIHNsb3Qtc2NvcGU9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICB7eyBpdGVtLm51bUhvdXNlLm5hbWUgfX0KICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPHRkIHNsb3Q9Im51bURvb3IiIHNsb3Qtc2NvcGU9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICB7eyBpdGVtLm51bURvb3IubmFtZSB9fQogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0ibnVtTWluZSIgc2xvdC1zY29wZT0ieyBpdGVtIH0iPgogICAgICAgICAgICAgIHt7IGl0ZW0ubnVtTWluZS5uYW1lIH19CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBzbG90PSJzdGFnZSIgc2xvdC1zY29wZT0ieyBpdGVtIH0iPgogICAgICAgICAgICAgIHt7IGl0ZW0uc3RhZ2UubmFtZSB9fQogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0ibnVtT2ZmaWNlIiBzbG90LXNjb3BlPSJ7IGl0ZW0gfSI+CiAgICAgICAgICAgICAge3sgaXRlbS5udW1PZmZpY2UubmFtZSB9fQogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0iaWQiIHNsb3Qtc2NvcGU9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICB7eyBpdGVtLmlkLm5hbWUgfX0KICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPHRkIHNsb3Q9InN0YXR1cyIgc2xvdC1zY29wZT0ieyBpdGVtIH0iPgogICAgICAgICAgICAgIDxDQmFkZ2Ugdi1pZj0iIWl0ZW0uc3RhdHVzLnZhbHVlIiBjb2xvcj0iZGFuZ2VyIj4KICAgICAgICAgICAgICAgIHt7IGl0ZW0uc3RhdHVzLm5hbWUgfX08L0NCYWRnZQogICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8Q0JhZGdlIHYtZWxzZSBjb2xvcj0ic3VjY2VzcyI+IHt7IGl0ZW0uc3RhdHVzLm5hbWUgfX08L0NCYWRnZT4KICAgICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgICA8Q1N3aXRjaAogICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICAgIDpjaGVja2VkPSJpdGVtLnN0YXR1cy52YWx1ZSIKICAgICAgICAgICAgICAgIDp2YWx1ZT0iaXRlbS5zdGF0dXMudmFsdWUiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPHRkIHNsb3Q9InNldHRpbmdzIiBzbG90LXNjb3BlPSJ7IGl0ZW0sIGluZGV4IH0iPgogICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICBzdHlsZT0id2hpdGUtc3BhY2U6IG5vd3JhcDsgY3Vyc29yOiBwb2ludGVyIgogICAgICAgICAgICAgICAgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiCiAgICAgICAgICAgICAgICBAY2xpY2s9Indhcm5pbmdNb2RhbCA9ICF3YXJuaW5nTW9kYWwiCiAgICAgICAgICAgICAgICA+PENJY29uIG5hbWU9ImNpbFNldHRpbmdzIiBjbGFzcz0ibXItMSIgLz4g0J3QsNGB0YLRgNC+0LnQutC4CiAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8IS0tIDx0ZCBzbG90PSJhdmF0YXIiIGNsYXNzPSJ0ZXh0LWNlbnRlciIgc2xvdC1zY29wZT0ieyBpdGVtIH0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImMtYXZhdGFyIj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0iaXRlbS5hdmF0YXIudXJsIiBjbGFzcz0iYy1hdmF0YXItaW1nIiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJjLWF2YXRhci1zdGF0dXMiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iYGJnLSR7aXRlbS5hdmF0YXIuc3RhdHVzIHx8ICdzZWNvbmRhcnknfWAiCiAgICAgICAgICAgICAgICA+PC9zcGFuPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0idXNlciIgc2xvdC1zY29wZT0ieyBpdGVtIH0iPgogICAgICAgICAgICAgIDxkaXY+e3sgaXRlbS51c2VyLm5hbWUgfX08L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbCB0ZXh0LW11dGVkIj4KICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj0iaXRlbS51c2VyLm5ldyI+TmV3PC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT5SZWN1cnJpbmc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgfCBSZWdpc3RlcmVkOiB7eyBpdGVtLnVzZXIucmVnaXN0ZXJlZCB9fQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0iY291bnRyeSIgc2xvdC1zY29wZT0ieyBpdGVtIH0iIGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgPENJY29uIDpuYW1lPSJpdGVtLmNvdW50cnkuZmxhZyIgaGVpZ2h0PSIyNSIgLz4KICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPHRkIHNsb3Q9InVzYWdlIiBzbG90LXNjb3BlPSJ7IGl0ZW0gfSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxvYXQtbGVmdCI+CiAgICAgICAgICAgICAgICAgIDxzdHJvbmc+e3sgaXRlbS51c2FnZS52YWx1ZSB9fSU8L3N0cm9uZz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxvYXQtcmlnaHQiPgogICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtbXV0ZWQiPnt7IGl0ZW0udXNhZ2UucGVyaW9kIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxDUHJvZ3Jlc3MKICAgICAgICAgICAgICAgIGNsYXNzPSJwcm9ncmVzcy14cyIKICAgICAgICAgICAgICAgIHYtbW9kZWw9Iml0ZW0udXNhZ2UudmFsdWUiCiAgICAgICAgICAgICAgICA6Y29sb3I9ImNvbG9yKGl0ZW0udXNhZ2UudmFsdWUpIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCBzbG90PSJwYXltZW50IiBzbG90LXNjb3BlPSJ7IGl0ZW0gfSIgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgICA8Q0ljb24gOm5hbWU9Iml0ZW0ucGF5bWVudC5pY29uIiBoZWlnaHQ9IjI1IiAvPgogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgc2xvdD0iYWN0aXZpdHkiIHNsb3Qtc2NvcGU9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbCB0ZXh0LW11dGVkIj5MYXN0IGxvZ2luPC9kaXY+CiAgICAgICAgICAgICAgPHN0cm9uZz57eyBpdGVtLmFjdGl2aXR5IH19PC9zdHJvbmc+CiAgICAgICAgICAgIDwvdGQ+IC0tPgogICAgICAgICAgPC9DRGF0YVRhYmxlPgogICAgICAgIDwvQ0NhcmRCb2R5PgogICAgICA8L0NDYXJkPgogICAgPC9DQ29sPgogIDwvQ1Jvdz4KICA8Q01vZGFsIHRpdGxlPSLQndCw0YHRgtGA0L7QudC60LgiIDpzaG93LnN5bmM9Indhcm5pbmdNb2RhbCI+CiAgICA8Q0NhcmQ+CiAgICAgIDwhLS0gPENDYXJkSGVhZGVyPiA8c3Ryb25nPkhvcml6b250YWw8L3N0cm9uZz4gRm9ybSA8L0NDYXJkSGVhZGVyPiAtLT4KICAgICAgPENDYXJkQm9keT4KICAgICAgICA8Q0Zvcm0+CiAgICAgICAgICA8Q0lucHV0UmFkaW9Hcm91cAogICAgICAgICAgICBjbGFzcz0iY29sLXNtIG1iLTMiCiAgICAgICAgICAgIDpvcHRpb25zPSJbJ9Ck0LjQtyDQu9C40YbQvicsICfQrtGAINC70LjRhtC+J10iCiAgICAgICAgICAgIGN1c3RvbQogICAgICAgICAgICBpbmxpbmUKICAgICAgICAgIC8+CiAgICAgICAgICA8Q0lucHV0CiAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgIGRlc2NyaXB0aW9uPSJidWlsZGluZyBuYW1lLiIKICAgICAgICAgICAgbGFiZWw9IkJ1aWxkaW5nIG5hbWUiCiAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkJ1aWxkaW5nIG5hbWUiCiAgICAgICAgICAvPgogICAgICAgICAgPENJbnB1dAogICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICBkZXNjcmlwdGlvbj0iTWFzdGVyIElELiIKICAgICAgICAgICAgbGFiZWw9Ik1hc3RlciBJRCIKICAgICAgICAgICAgaG9yaXpvbnRhbAogICAgICAgICAgICBwbGFjZWhvbGRlcj0iTWFzdGVyIElEIgogICAgICAgICAgLz4KICAgICAgICAgIDxDSW5wdXQKICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgZGVzY3JpcHRpb249Ik1hc3Rlcmh1YiBJRC4iCiAgICAgICAgICAgIGxhYmVsPSJNYXN0ZXJodWIgSUQiCiAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik1hc3Rlcmh1YiBJRCIKICAgICAgICAgIC8+CiAgICAgICAgICA8Q0lucHV0CiAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgIGRlc2NyaXB0aW9uPSJPd25lciBuYW1lLiIKICAgICAgICAgICAgbGFiZWw9Ik93bmVyIG5hbWUiCiAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik93bmVyIG5hbWUiCiAgICAgICAgICAvPgogICAgICAgICAgPENJbnB1dAogICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICBkZXNjcmlwdGlvbj0iT3duZXIgY29udGFjdHMuIgogICAgICAgICAgICBsYWJlbD0iT3duZXIgY29udGFjdHMiCiAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik93bmVyIGNvbnRhY3RzIgogICAgICAgICAgLz4KICAgICAgICAgIDxDSW5wdXQKICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgZGVzY3JpcHRpb249Ik93bmVyIElELiIKICAgICAgICAgICAgbGFiZWw9Ik93bmVyIElEIgogICAgICAgICAgICBob3Jpem9udGFsCiAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJPd25lciBJRCIKICAgICAgICAgIC8+CiAgICAgICAgICA8Q0lucHV0CiAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgIGRlc2NyaXB0aW9uPSJQYXltZW50LiIKICAgICAgICAgICAgbGFiZWw9IlBheW1lbnQiCiAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlBheW1lbnQiCiAgICAgICAgICAvPgogICAgICAgICAgPENJbnB1dAogICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICBkZXNjcmlwdGlvbj0iQ29udHJhY3QuIgogICAgICAgICAgICBsYWJlbD0iQ29udHJhY3QiCiAgICAgICAgICAgIGhvcml6b250YWwKICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkNvbnRyYWN0IgogICAgICAgICAgLz4KICAgICAgICA8L0NGb3JtPgogICAgICA8L0NDYXJkQm9keT4KICAgIDwvQ0NhcmQ+CiAgPC9DTW9kYWw+CjwvZGl2Pgo="},null]}