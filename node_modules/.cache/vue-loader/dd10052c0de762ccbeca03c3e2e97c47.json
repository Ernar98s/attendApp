{"remainingRequest":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\src\\views\\Dashboard.vue?vue&type=style&index=0&id=22ba47ca&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\src\\views\\Dashboard.vue","mtime":1619903801771},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Omen\\Downloads\\Telegram Desktop\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbC1zbS02LmZvcm0taW5saW5lIHsKICBtYXJnaW4tbGVmdDogMTVweDsKfQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <WidgetsDropdown/>\n    <CRow>\n      <CCol md=\"12\">\n        <CCard>\n          <CCardHeader>\n            <div class=\"d-flex aligin-items-center justify-content-between\">\n              <span>Клапаны</span>\n              <CButton color=\"success\" @click=\"warningModal = !warningModal\">\n                Добавить\n              </CButton>\n            </div>\n          </CCardHeader\n          >\n          <CCardBody>\n            <div class=\"d-flex aligin-items-center justify-content-between\">\n              <CSelect\n                  v-if=\"isSelect\"\n                  horizontal\n                  label=\"Действие на выбор\"\n                  :value.sync=\"action_switcher\"\n                  :options=\"['Не выбрано ничего','Включить отмеченные','Отключить отмеченные']\"\n                  v-on:change=\"actionSwitcher()\"\n                  class=\"col-4\"\n              />\n              <CSelect\n                  horizontal\n                  label=\"Город\"\n                  :options=\"['Алматы', 'Астана']\"\n                  class=\"col-4\"\n              />\n              <!--              <CInput placeholder=\"\" v-on:change=\"search()\">-->\n              <!--                <template #append>-->\n              <!--                  <CButton color=\"primary\">-->\n              <!--                    <CIcon name=\"cil-magnifying-glass\"/>-->\n              <!--                    Search-->\n              <!--                  </CButton>-->\n              <!--                </template>-->\n              <!--              </CInput>-->\n            </div>\n            <CDataTable\n                class=\"mb-0 table-outline\"\n                hover\n                :items=\"tableItems\"\n                :fields=\"tableFields\"\n                head-color=\"light\"\n                column-filter\n                table-filter\n                sorter\n                :tableFilter=\"{'label':'Search','placeholder':''}\"\n\n            >\n              <td slot=\"select\" slot-scope=\"{ item }\">\n                <CInputCheckbox\n                    :value=\"item.select\"\n                    custom\n                    inline\n                    @change=\"isSelect = true\"\n                />\n              </td>\n              <td slot=\"city\" slot-scope=\"{ item }\">\n                {{ item.city }}\n              </td>\n              <td slot=\"district\" slot-scope=\"{ item }\">\n                {{ item.district }}\n              </td>\n              <td slot=\"street\" slot-scope=\"{ item }\">\n                {{ item.street }}\n              </td>\n              <td slot=\"building\" slot-scope=\"{ item }\">\n                {{ item.typeofbuilding }}\n              </td>\n              <td slot=\"numHouse\" slot-scope=\"{ item }\">\n                {{ item.buildingnum }}\n              </td>\n              <td slot=\"numDoor\" slot-scope=\"{ item }\">\n                {{ item.entrancenum }}\n              </td>\n              <td slot=\"numMine\" slot-scope=\"{ item }\">\n                {{ item.shaftnum }}\n              </td>\n              <td slot=\"stage\" slot-scope=\"{ item }\">\n                {{ item.floor }}\n              </td>\n              <td slot=\"numOffice\" slot-scope=\"{ item }\">\n                {{ item.aptoroffice }}\n              </td>\n              <td slot=\"id\" slot-scope=\"{ item }\">\n                {{ item.valveID }}\n              </td>\n              <td slot=\"status\" slot-scope=\"{ item }\">\n                <CBadge v-if=\"item.status==0\" color=\"danger\">\n                  выключен\n                </CBadge\n                >\n                <CBadge v-else-if=\"item.status==1\" color=\"success\">включен</CBadge>\n                <CBadge v-else-if=\"item.status==2\" color=\"warning\">нет данных</CBadge>\n                <CBadge v-else color=\"info\">не известно</CBadge>\n                <br/>\n                <CSwitch\n                    class=\"mt-1\"\n                    color=\"primary\"\n                    :checked.sync=\"item.status==1\"\n                    :value=\"item.status\"\n                    @update:checked=\"actionStatusChange(item, index)\"\n                />\n              </td>\n              <td slot=\"settings\" slot-scope=\"{ item, index }\">\n                <span\n                    style=\"white-space: nowrap; cursor: pointer\"\n                    class=\"d-flex align-items-center\"\n                    @click=\"warningModal = !warningModal\"\n                ><CIcon name=\"cilSettings\" class=\"mr-1\"/> Настройки\n                </span>\n              </td>\n            </CDataTable>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n    <CModal title=\"Настройки\" :show.sync=\"warningModal\">\n      <CCard>\n        <!-- <CCardHeader> <strong>Horizontal</strong> Form </CCardHeader> -->\n        <CCardBody>\n          <CForm>\n            <CInputRadioGroup\n                class=\"col-sm mb-3\"\n                :options=\"['Физ лицо', 'Юр лицо']\"\n                custom\n                inline\n            />\n            <CInput\n                type=\"text\"\n                description=\"building name.\"\n                label=\"Building name\"\n                horizontal\n                placeholder=\"Building name\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Master ID.\"\n                label=\"Master ID\"\n                horizontal\n                placeholder=\"Master ID\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Masterhub ID.\"\n                label=\"Masterhub ID\"\n                horizontal\n                placeholder=\"Masterhub ID\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Owner name.\"\n                label=\"Owner name\"\n                horizontal\n                placeholder=\"Owner name\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Owner contacts.\"\n                label=\"Owner contacts\"\n                horizontal\n                placeholder=\"Owner contacts\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Owner ID.\"\n                label=\"Owner ID\"\n                horizontal\n                placeholder=\"Owner ID\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Payment.\"\n                label=\"Payment\"\n                horizontal\n                placeholder=\"Payment\"\n            />\n            <CInput\n                type=\"text\"\n                description=\"Contract.\"\n                label=\"Contract\"\n                horizontal\n                placeholder=\"Contract\"\n            />\n          </CForm>\n        </CCardBody>\n      </CCard>\n    </CModal>\n  </div>\n</template>\n\n<script>\nimport MainChartExample from \"./charts/MainChartExample\";\nimport WidgetsDropdown from \"./widgets/WidgetsDropdown\";\nimport WidgetsBrand from \"./widgets/WidgetsBrand\";\n\nconst qs = require('qs')\nconst axios = require('axios')\nexport default {\n  name: \"Dashboard\",\n  components: {\n    MainChartExample,\n    WidgetsDropdown,\n    WidgetsBrand,\n  },\n  data() {\n    return {\n      warningModal: false,\n      isSelect: false,\n      action_switcher: '',\n      id: \"\",\n      tableItems: [],\n      tableFields: [\n        {key: \"select\", label: \"\", sorter: false, filter: false},\n        {key: \"city\", label: \"Город \"},\n        {key: \"district\", label: \"Район \", _classes: \"text-center\"},\n        {key: \"street\", label: \"Улица \"},\n        {key: \"typeofbuilding\", label: \"Вид здания\"},\n        {key: \"buildingnum\", label: \"Номер дома \"},\n        {key: \"entrancenum\", label: \"Номер подъезда \"},\n        {key: \"shaftnum\", label: \"Номер шахты \"},\n        {key: \"floor\", label: \"Этаж\"},\n        {key: \"aptoroffice\", label: \"Кв/офис\"},\n        {key: \"valveID\", label: \"ID клапана\"},\n        {key: \"status\", label: \"Статус клапана\", filter: false},\n        {key: \"settings\", label: \"Действия\", sorter: false, filter: false},\n      ],\n    };\n  },\n  mounted() {\n    this.getResults();\n  },\n  methods: {\n    search() {\n\n    },\n    actionSwitcher() {\n      console.log(this.action_switcher);\n    },\n    actionStatusChange(item, index) {\n      console.log(item);\n      console.log(index);\n      let app = this;\n      // axios.defaults.headers.common['Authorization'] = 'Bearer ' + window.auth.token;\n      // axios.post('/admin/cities/store', [{'device_id': item.valveID}]).then(({data}) => {\n      //\n      // }).catch(function (error) {\n      //\n      // })\n    },\n    getResults() {\n      let app = this;\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + window.auth.token;\n      axios.get('/getvalvesbycity/0').then(response => {\n        app.tableItems = response.data;\n        for (var i = 0; i < app.tableItems.length; i++) {\n          app.tableItems[i].select = false;\n        }\n      }).catch(error => {\n        if (error.response.status == 401) {\n          window.auth.logout();\n        }\n      });\n    },\n    color(value) {\n      let $color;\n      if (value <= 25) {\n        $color = \"info\";\n      } else if (value > 25 && value <= 50) {\n        $color = \"success\";\n      } else if (value > 50 && value <= 75) {\n        $color = \"warning\";\n      } else if (value > 75 && value <= 100) {\n        $color = \"danger\";\n      }\n      return $color;\n    },\n  },\n};\n</script>\n<style scoped>\n.col-sm-6.form-inline {\n  margin-left: 15px;\n}\n</style>"]}]}